{"version":3,"file":"react-var-ui.cjs.development.js","sources":["../src/common/VarUIContext.ts","../src/VarUI.tsx","../src/VarBase.tsx","../src/VarAngle.tsx","../src/VarButton.tsx","../src/VarColor.tsx","../src/VarDisplay.tsx","../src/common/roundValue.ts","../src/icons/IconDown.tsx","../src/icons/IconUp.tsx","../src/VarNumber.tsx","../src/VarSelect.tsx","../src/VarSlider.tsx","../src/VarString.tsx","../src/VarToggle.tsx","../src/VarXY.tsx","../src/icons/IconImageSelect.tsx","../src/VarImage.tsx","../src/VarCategory.tsx"],"sourcesContent":["import { createContext, useContext, useMemo, useCallback } from 'react';\n\nexport type VarUIObject = any;\n\nexport interface IVarUIContext {\n  values: VarUIObject;\n  getValue: (path?: string) => any;\n  setValue: (path: string, value: any) => void;\n}\n\nexport const VarUIContext = createContext<IVarUIContext | undefined>(undefined);\n\n/**\n * Simple function used for custom input components.\n * @param path\n * @param fallbackValue\n * @param onChange\n * @returns [value: T, setValue: (value: T) => void]\n */\nexport function useVarUIValue<T>(\n  path?: string,\n  fallbackValue?: T,\n  onChange?: (value: T) => void\n): [T, (value: T) => void] {\n  const context = useContext(VarUIContext);\n  const value = useMemo(() => context?.getValue(path) ?? fallbackValue, [\n    context,\n    path,\n    fallbackValue\n  ]);\n  const setValue = useCallback(\n    (value: T) => {\n      if (path && context) {\n        context.setValue(path, value);\n      }\n\n      onChange?.(value);\n    },\n    [path, context, onChange]\n  );\n\n  return [value, setValue];\n}\n","import React, { FC, ReactNode, useMemo, useCallback } from 'react';\nimport cloneDeep from 'lodash.clonedeep';\nimport set from 'lodash.set';\nimport result from 'lodash.result';\n\nimport { VarUIObject, VarUIContext } from './common/VarUIContext';\n\nexport interface IVarUIProps {\n  /**\n   * A JavaScript object or array to be mutated by the input components.\n   */\n  values: VarUIObject;\n\n  /**\n   * The function to be called whenever an update is available.\n   */\n  updateValues: (values: VarUIObject) => void;\n\n  /**\n   * Additional class names for the wrapper object.\n   */\n  className?: string;\n\n  /**\n   * Input components (or any other children).\n   */\n  children?: ReactNode;\n}\n\n/**\n * This is the main component which provides a Context for other components.\n * It is not required to use this component - other components accept\n * `onChange` and `value` properties which provide a similar functionality.\n */\nexport const VarUI: FC<IVarUIProps> = ({\n  values,\n  updateValues,\n  className,\n  children\n}) => {\n  const getValue = useCallback(\n    (path?: string) => (path ? result(values, path) : undefined),\n    [values]\n  );\n\n  const setValue = useCallback(\n    (path: string, value: any) => {\n      updateValues(set(cloneDeep(values), path, value));\n    },\n    [values, updateValues]\n  );\n\n  const contextValue = useMemo(() => ({ values, getValue, setValue }), [\n    values,\n    getValue,\n    setValue\n  ]);\n\n  return (\n    <VarUIContext.Provider value={contextValue}>\n      <div className={'react-var-ui ' + (className ? className : '')}>\n        {children}\n      </div>\n    </VarUIContext.Provider>\n  );\n};\n","import React, { FC, ReactChild, ReactNode } from 'react';\n\nexport interface IVarBaseProps {\n  /**\n   * Label to be shown left to the input.\n   */\n  label?: ReactChild;\n\n  /**\n   * Additional class names on the wrapping div element.\n   */\n  className?: string;\n\n  /**\n   * Should the component be disabled.\n   */\n  disabled?: boolean;\n\n  /**\n   * Children. Only rendered when provided directly to the VarBase component.\n   */\n  children?: ReactNode;\n}\n\nexport interface IVarBaseInputProps<T> extends IVarBaseProps {\n  /**\n   * Variable path in the data object.\n   */\n  path?: string;\n\n  /**\n   * Current value (only used if context and path aren't available).\n   * In most cases you aren't going to need this.\n   */\n  value?: T;\n\n  /**\n   * Default value for components that support resetting (on double click for example).\n   */\n  defaultValue?: T;\n\n  /**\n   * On change event, called with the new value if provided.\n   * In most cases you aren't going to need this.\n   */\n  onChange?: (value: T) => void;\n}\n\n/**\n * Base VarUI input component. Doesn't do anything besides displaying the label.\n * Used to construct other components from.\n */\nexport const VarBase: FC<IVarBaseProps> = ({\n  label,\n  children,\n  className,\n  disabled\n}) => {\n  return (\n    <div\n      className={\n        'react-var-ui-label ' +\n        (label\n          ? 'react-var-ui-label-has-label '\n          : 'react-var-ui-label-no-label ') +\n        (disabled ? 'react-var-ui-disabled ' : '') +\n        (className ? className : '')\n      }\n    >\n      {!!label && <span>{label}</span>}\n      {children}\n    </div>\n  );\n};\n","import React, { FC, useCallback, useEffect, useMemo, useRef } from 'react';\nimport { usePointerDragSimple } from 'react-use-pointer-drag';\n\nimport { useVarUIValue } from './common/VarUIContext';\nimport { IVarBaseInputProps, VarBase } from './VarBase';\n\nconst PI2 = Math.PI * 2;\n\nfunction wrap(angle: number) {\n  return (PI2 + (angle % PI2)) % PI2;\n}\n\nexport interface IVarAngleProps extends IVarBaseInputProps<number> {}\n\n/**\n * Angle picker component. Accepts and provides numbers (radians).\n */\nexport const VarAngle: FC<IVarAngleProps> = ({\n  label,\n  path,\n  value,\n  onChange,\n  disabled,\n  defaultValue = 0,\n  className,\n}) => {\n  const controlRef = useRef<HTMLDivElement>(null);\n  const [currentValue, setCurrentValue] = useVarUIValue(path, value, onChange);\n  const degrees = useMemo(\n    () => Math.round(wrap(currentValue) * (180 / Math.PI)),\n    [currentValue]\n  );\n\n  const updatePosition = useCallback(\n    (x: number, y: number) => {\n      if (!controlRef.current) {\n        return;\n      }\n\n      const div = controlRef.current;\n      const rect = div.getBoundingClientRect();\n      const centerX = rect.left + rect.width / 2;\n      const centerY = rect.top + rect.height / 2;\n      setCurrentValue(wrap(Math.atan2(y - centerY, x - centerX) + Math.PI / 2));\n    },\n    [setCurrentValue]\n  );\n\n  const { events } = usePointerDragSimple(updatePosition);\n\n  useEffect(() => {\n    controlRef.current?.addEventListener('wheel', e => e.preventDefault());\n  }, []);\n\n  return (\n    <VarBase label={label} disabled={disabled} className={className}>\n      <span className=\"react-var-ui-angle-value\">{degrees}&deg;</span>\n      <div className=\"react-var-ui-angle\">\n        <div\n          className=\"react-var-ui-angle-control\"\n          ref={controlRef}\n          style={{ transform: `rotate(${degrees}deg)` }}\n          onDoubleClick={() =>\n            typeof defaultValue !== 'undefined' && setCurrentValue(defaultValue)\n          }\n          onWheel={e => {\n            setCurrentValue(wrap(currentValue + 0.5 * (e.deltaY < 0 ? -1 : 1)));\n          }}\n          title=\"Angle\"\n          {...events}\n        ></div>\n      </div>\n    </VarBase>\n  );\n};\n","import React, { FC, ReactNode } from 'react';\n\nimport { IVarBaseProps, VarBase } from './VarBase';\n\nexport interface IVarButtonProps extends IVarBaseProps {\n  /**\n   * Called when the button is clicked.\n   */\n  onClick?: () => void;\n\n  /**\n   * Text for the button.\n   */\n  buttonLabel: ReactNode;\n\n  /**\n   * Should the component be disabled.\n   */\n  disabled?: boolean;\n}\n\n/**\n * Button component. Only provides a onClick property.\n */\nexport const VarButton: FC<IVarButtonProps> = ({\n  label,\n  onClick,\n  buttonLabel,\n  disabled,\n  className\n}) => {\n  return (\n    <VarBase label={label} disabled={disabled} className={className}>\n      <span className=\"react-var-ui-button\">\n        <button onClick={() => onClick?.()} disabled={disabled}>\n          {buttonLabel}\n        </button>\n      </span>\n    </VarBase>\n  );\n};\n","import React, { FC, useCallback, useState } from 'react';\nimport { SketchPicker } from 'react-color';\n\nimport { useVarUIValue } from './common/VarUIContext';\nimport { IVarBaseInputProps, VarBase } from './VarBase';\n\nexport interface IVarColorProps extends IVarBaseInputProps<string> {\n  /**\n   * Should allow picking alpha values?\n   * If true, the result hex code will contain extra two characters representing the alpha value, from 00 to FF.\n   */\n  alpha?: boolean;\n}\n\n/**\n * Color picker component. Returns and accepts values in form of hex color strings.\n */\nexport const VarColor: FC<IVarColorProps> = ({\n  label,\n  path,\n  value,\n  onChange,\n  alpha,\n  disabled,\n  className,\n}) => {\n  const [currentValue, setCurrentValue] = useVarUIValue(path, value, onChange);\n\n  const [show, setShow] = useState(false);\n  const toggle = useCallback(() => setShow(show => !show), [setShow]);\n  const close = useCallback(() => setShow(false), [setShow]);\n\n  return (\n    <VarBase label={label} disabled={disabled} className={className}>\n      <span>\n        <span className=\"react-var-ui-color-value\">{currentValue}</span>\n        <div className=\"react-var-ui-color\">\n          <div className=\"react-var-ui-color-swatch\" onClick={toggle}>\n            <div\n              className=\"react-var-ui-color-color\"\n              title=\"Color preview\"\n              style={{ background: currentValue }}\n            />\n          </div>\n          {show ? (\n            <div className=\"react-var-ui-color-popover\">\n              <div className=\"react-var-ui-color-cover\" onClick={close} />\n              <SketchPicker\n                color={currentValue}\n                onChange={result => {\n                  if (alpha) {\n                    let alphaValue = Math.round(\n                      (result.rgb.a ?? 1.0) * 255\n                    ).toString(16);\n                    if (alphaValue.length === 1) {\n                      alphaValue = '0' + alphaValue;\n                    }\n                    setCurrentValue(result.hex + alphaValue);\n                  } else {\n                    setCurrentValue(result.hex);\n                  }\n                }}\n                disableAlpha={!alpha}\n              />\n            </div>\n          ) : null}\n        </div>\n      </span>\n    </VarBase>\n  );\n};\n","import React, { FC, ReactText } from 'react';\n\nimport { useVarUIValue } from './common/VarUIContext';\nimport { IVarBaseProps, VarBase } from './VarBase';\n\nexport interface IVarDisplayProps extends IVarBaseProps {\n  /**\n   * Variable path in the data object.\n   */\n  path?: string;\n\n  /**\n   * Current value (only used if context and path aren't available).\n   * In most cases you aren't going to need this.\n   */\n  value?: ReactText;\n}\n\n/**\n * A simple component that displays a string or a numeric value.\n */\nexport const VarDisplay: FC<IVarDisplayProps> = ({\n  label,\n  path,\n  value,\n  disabled,\n  className\n}) => {\n  const [currentValue] = useVarUIValue(path, value);\n\n  return (\n    <VarBase label={label} disabled={disabled} className={className}>\n      <span>{currentValue}</span>\n    </VarBase>\n  );\n};\n","export function roundValue(\n  value: number,\n  min?: number,\n  max?: number,\n  step?: number,\n  integer?: boolean\n): number {\n  if (!isFinite(value)) {\n    value = min ?? 0;\n  }\n\n  let decimalPlaces = 2;\n  if (typeof step === 'number') {\n    decimalPlaces = step.toString().split('.')[1]?.length || 0;\n\n    if (decimalPlaces > 20) {\n      // JavaScript limitation\n      decimalPlaces = 20;\n    }\n\n    value = Math.round(value / step) * step;\n  }\n\n  if (typeof min === 'number') {\n    value = Math.max(min, value);\n  }\n\n  if (typeof max === 'number') {\n    value = Math.min(max, value);\n  }\n\n  return integer ? Math.round(value) : parseFloat(value.toFixed(decimalPlaces));\n}\n","import React, { FC } from 'react';\n\nexport const IconDown: FC = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"16\"\n      height=\"16\"\n      fill=\"currentColor\"\n      viewBox=\"0 0 16 16\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\"\n      />\n    </svg>\n  );\n};\n","import React, { FC } from 'react';\n\nexport const IconUp: FC = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"16\"\n      height=\"16\"\n      fill=\"currentColor\"\n      viewBox=\"0 0 16 16\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z\"\n      />\n    </svg>\n  );\n};\n","import React, { FC, useCallback, useMemo } from 'react';\n\nimport { useVarUIValue } from './common/VarUIContext';\nimport { roundValue } from './common/roundValue';\nimport { IVarBaseInputProps, VarBase } from './VarBase';\nimport { IconDown } from './icons/IconDown';\nimport { IconUp } from './icons/IconUp';\n\nexport interface IVarNumberProps extends IVarBaseInputProps<number> {\n  /**\n   * Minimum value.\n   */\n  min?: number;\n\n  /**\n   * Maximum value.\n   */\n  max?: number;\n\n  /**\n   * Step.\n   */\n  step?: number;\n\n  /**\n   * Should the end result be rounded to an integer value.\n   */\n  integer?: boolean;\n\n  /**\n   * If true will display buttons that increase and decrease the value by step.\n   * Step must be set.\n   */\n  showButtons?: boolean;\n}\n\n/**\n * Integer/float number component. Accepts and provides numbers.\n */\nexport const VarNumber: FC<IVarNumberProps> = ({\n  label,\n  path,\n  value,\n  onChange,\n  min,\n  max,\n  step = 1,\n  integer,\n  showButtons,\n  disabled,\n  className,\n}) => {\n  const [currentValue, setCurrentValue] = useVarUIValue(path, value, onChange);\n  const rounded = useMemo(\n    () => roundValue(currentValue, min, max, step, !!integer),\n    [currentValue, min, max, step, integer]\n  );\n\n  const increaseValue = useCallback(\n    () =>\n      setCurrentValue(\n        roundValue(currentValue + (step ?? 1), min, max, step, !!integer)\n      ),\n    [currentValue, setCurrentValue, integer, min, max, step]\n  );\n\n  const decreaseValue = useCallback(\n    () =>\n      setCurrentValue(\n        roundValue(currentValue - (step ?? 1), min, max, step, !!integer)\n      ),\n    [currentValue, setCurrentValue, integer, min, max, step]\n  );\n\n  return (\n    <VarBase label={label} disabled={disabled} className={className}>\n      <div className=\"react-var-ui-number\">\n        <input\n          className=\"react-var-ui-number-input\"\n          type=\"number\"\n          min={min}\n          max={max}\n          step={step}\n          value={rounded.toString()}\n          onChange={e =>\n            setCurrentValue(\n              roundValue(parseFloat(e.target.value), min, max, step, !!integer)\n            )\n          }\n        />\n        {showButtons && (\n          <>\n            <button title=\"Increase\" onClick={increaseValue}>\n              <IconUp />\n            </button>\n            <button title=\"Decrease\" onClick={decreaseValue}>\n              <IconDown />\n            </button>\n          </>\n        )}\n      </div>\n    </VarBase>\n  );\n};\n","import React, { FC, ReactText, useMemo } from 'react';\n\nimport { useVarUIValue } from './common/VarUIContext';\nimport { IVarBaseInputProps, VarBase } from './VarBase';\n\nexport interface IVarSelectOption {\n  /**\n   * Key for the option. Also used as value if `value` is not specified.\n   */\n  key: ReactText;\n\n  /**\n   * Option label.\n   */\n  label: string;\n\n  /**\n   * Option value. Key will be used if not specified.\n   * Note: Will be serialized to JSON and deserialized when selected.\n   */\n  value?: any;\n}\n\nexport interface IVarSelectProps extends IVarBaseInputProps<any> {\n  /**\n   * Options to be displayed.\n   */\n  options: IVarSelectOption[];\n}\n\n/**\n * Select component. Returns and accepts either `value` from option object or `key` when `value` is not provided.\n */\nexport const VarSelect: FC<IVarSelectProps> = ({\n  label,\n  path,\n  value,\n  onChange,\n  options,\n  disabled,\n  className,\n}) => {\n  const [currentValue, setCurrentValue] = useVarUIValue(path, value, onChange);\n\n  const serializedCurrentValue = useMemo(() => JSON.stringify(currentValue), [\n    currentValue,\n  ]);\n\n  return (\n    <VarBase label={label} disabled={disabled} className={className}>\n      <div className=\"react-var-ui-select\">\n        <select\n          onChange={e => setCurrentValue(JSON.parse(e.target.value))}\n          value={serializedCurrentValue}\n          title=\"Select options\"\n        >\n          {options.map(option => {\n            const serializedValue = JSON.stringify(option.value ?? option.key);\n\n            return (\n              <option key={option.key} value={serializedValue}>\n                {option.label}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n    </VarBase>\n  );\n};\n","import React, { FC, useCallback, useEffect, useMemo, useRef } from 'react';\nimport { usePointerDragSimple } from 'react-use-pointer-drag';\n\nimport { useVarUIValue } from './common/VarUIContext';\nimport { roundValue } from './common/roundValue';\nimport { IVarBaseInputProps, VarBase } from './VarBase';\nimport { IconDown } from './icons/IconDown';\nimport { IconUp } from './icons/IconUp';\n\nexport interface IVarSliderProps extends IVarBaseInputProps<number> {\n  /**\n   * Minimum value.\n   */\n  min: number;\n\n  /**\n   * Maximum value.\n   */\n  max: number;\n\n  /**\n   * Step.\n   */\n  step: number;\n\n  /**\n   * Should the end result be rounded to an integer value.\n   */\n  integer?: boolean;\n\n  /**\n   * If true will display an editable input, otherwise shows a read only value.\n   */\n  showInput?: boolean;\n\n  /**\n   * If true will display buttons that increase and decrease the value by step.\n   */\n  showButtons?: boolean;\n}\n\n/**\n * Integer/float slider component. Accepts and provides numbers.\n */\nexport const VarSlider: FC<IVarSliderProps> = ({\n  label,\n  path,\n  value,\n  onChange,\n  min,\n  max,\n  step,\n  integer,\n  defaultValue,\n  showInput,\n  showButtons,\n  disabled,\n  className,\n}) => {\n  const sliderRef = useRef<HTMLDivElement>(null);\n  const [currentValue, setCurrentValue] = useVarUIValue(path, value, onChange);\n  const rounded = useMemo(\n    () => roundValue(currentValue, min, max, step, !!integer),\n    [currentValue, min, max, step, integer]\n  );\n  const percent = useMemo(() => ((rounded - min) / (max - min)) * 100, [\n    rounded,\n    min,\n    max,\n  ]);\n\n  const updatePosition = useCallback(\n    (x: number) => {\n      if (!sliderRef.current) {\n        return;\n      }\n\n      const div = sliderRef.current;\n      const rect = div.getBoundingClientRect();\n      const percent = (x - rect.left) / rect.width;\n      const value = roundValue(\n        min + (max - min) * percent,\n        min,\n        max,\n        step,\n        !!integer\n      );\n      setCurrentValue(value);\n    },\n    [setCurrentValue, integer, min, max, step]\n  );\n\n  const increaseValue = useCallback(\n    () =>\n      setCurrentValue(\n        roundValue(currentValue + step, min, max, step, !!integer)\n      ),\n    [currentValue, setCurrentValue, integer, min, max, step]\n  );\n\n  const decreaseValue = useCallback(\n    () =>\n      setCurrentValue(\n        roundValue(currentValue - step, min, max, step, !!integer)\n      ),\n    [currentValue, setCurrentValue, integer, min, max, step]\n  );\n\n  const { events } = usePointerDragSimple(updatePosition);\n\n  useEffect(() => {\n    sliderRef.current?.addEventListener('wheel', e => e.preventDefault());\n  }, []);\n\n  return (\n    <VarBase label={label} disabled={disabled} className={className}>\n      <div className=\"react-var-ui-slider\">\n        <div\n          className=\"react-var-ui-slider-track\"\n          ref={sliderRef}\n          onClick={e => updatePosition(e.clientX)}\n          onDoubleClick={() =>\n            typeof defaultValue !== 'undefined' && setCurrentValue(defaultValue)\n          }\n          onWheel={e => {\n            e.deltaY < 0 ? increaseValue() : decreaseValue();\n          }}\n          title=\"Slider\"\n          {...events}\n        >\n          <div\n            className=\"react-var-ui-slider-content\"\n            style={{ width: percent + '%' }}\n          ></div>\n        </div>\n        {showInput ? (\n          <input\n            className=\"react-var-ui-slider-input\"\n            type=\"number\"\n            min={min}\n            max={max}\n            step={step}\n            value={rounded}\n            onChange={e =>\n              setCurrentValue(\n                roundValue(\n                  parseFloat(e.target.value),\n                  min,\n                  max,\n                  step,\n                  !!integer\n                )\n              )\n            }\n          />\n        ) : (\n          <span>{rounded.toString()}</span>\n        )}\n        {showButtons && (\n          <>\n            <button title=\"Increase\" onClick={increaseValue}>\n              <IconUp />\n            </button>\n            <button title=\"Decrease\" onClick={decreaseValue}>\n              <IconDown />\n            </button>\n          </>\n        )}\n      </div>\n    </VarBase>\n  );\n};\n","import React, { CSSProperties, FC, useMemo } from 'react';\n\nimport { useVarUIValue } from './common/VarUIContext';\nimport { IVarBaseInputProps, VarBase } from './VarBase';\n\nexport interface IVarStringProps extends IVarBaseInputProps<string> {\n  /**\n   * Maximum length of the text.\n   */\n  maxLength?: number;\n\n  /**\n   * Should the field be a textarea?\n   */\n  multiline?: boolean;\n\n  /**\n   * Should the text field auto expand?\n   * Only works with multiline instances.\n   */\n  autoexpand?: boolean;\n}\n\n/**\n * String input component. Accepts and provides a string value.\n */\nexport const VarString: FC<IVarStringProps> = ({\n  label,\n  path,\n  value,\n  onChange,\n  maxLength,\n  multiline,\n  autoexpand,\n  disabled,\n  className,\n}) => {\n  const [currentValue, setCurrentValue] = useVarUIValue(path, value, onChange);\n\n  const autoexpandOnInput = (event: React.FormEvent<HTMLTextAreaElement>) => {\n    const textarea = event.currentTarget;\n    textarea.style.height = '0';\n    textarea.style.height = `${textarea.scrollHeight}px`;\n  };\n\n  const textareaStyle: CSSProperties | undefined = useMemo(\n    () => (autoexpand ? { overflow: 'hidden', resize: 'none' } : undefined),\n    [autoexpand]\n  );\n\n  return (\n    <VarBase label={label} disabled={disabled} className={className}>\n      {multiline ? (\n        <textarea\n          className=\"react-var-ui-string-multiline\"\n          value={currentValue}\n          onChange={e => setCurrentValue(e.target.value)}\n          onInput={autoexpand ? autoexpandOnInput : undefined}\n          style={textareaStyle}\n        />\n      ) : (\n        <span className=\"react-var-ui-string\">\n          <input\n            type=\"text\"\n            maxLength={maxLength}\n            value={currentValue}\n            onChange={e => setCurrentValue(e.target.value)}\n          />\n        </span>\n      )}\n    </VarBase>\n  );\n};\n","import React, { FC } from 'react';\n\nimport { useVarUIValue } from './common/VarUIContext';\nimport { IVarBaseInputProps, VarBase } from './VarBase';\n\nexport interface IVarToggleProps extends IVarBaseInputProps<boolean> {}\n\n/**\n * Checkbox/toggle component. Accepts and returns a boolean (true/false).\n */\nexport const VarToggle: FC<IVarToggleProps> = ({\n  label,\n  path,\n  value,\n  onChange,\n  disabled,\n  className\n}) => {\n  const [currentValue, setCurrentValue] = useVarUIValue(path, value, onChange);\n\n  return (\n    <VarBase label={label} disabled={disabled} className={className}>\n      <span>\n        <label className=\"react-var-ui-toggle\" title=\"Toggle\">\n          <input\n            type=\"checkbox\"\n            checked={currentValue}\n            onChange={e => setCurrentValue(e.target.checked)}\n          />\n          <span className=\"react-var-ui-toggle-helper\"></span>\n        </label>\n      </span>\n    </VarBase>\n  );\n};\n","import React, { FC, useCallback, useMemo, useRef } from 'react';\nimport { usePointerDragSimple } from 'react-use-pointer-drag';\n\nimport { useVarUIValue } from './common/VarUIContext';\nimport { IVarBaseInputProps, VarBase } from './VarBase';\n\nexport type IVarXYValue = [number, number];\n\nexport interface IVarXYProps extends IVarBaseInputProps<IVarXYValue> {\n  /**\n   * Minimum value.\n   */\n  min?: IVarXYValue;\n\n  /**\n   * Maximum value.\n   */\n  max?: IVarXYValue;\n\n  /**\n   * Step.\n   */\n  step?: IVarXYValue;\n}\n\nfunction roundValue(\n  value: IVarXYValue,\n  min: IVarXYValue,\n  max: IVarXYValue,\n  step: IVarXYValue\n): IVarXYValue {\n  const result: IVarXYValue = [0, 0];\n\n  if (!value || !Array.isArray(value) || value.length < 2) {\n    return result;\n  }\n\n  for (let i = 0; i < step.length; i++) {\n    const decimalPlaces = step[i].toString().split('.')[1]?.length || 0;\n    result[i] = Math.round(value[i] / step[i]) * step[i];\n    result[i] = Math.max(min[i], result[i]);\n    result[i] = Math.min(max[i], result[i]);\n\n    result[i] = parseFloat(result[i].toFixed(decimalPlaces));\n  }\n\n  return result;\n}\n\nfunction percentValue(\n  value: IVarXYValue,\n  min: IVarXYValue,\n  max: IVarXYValue\n): IVarXYValue {\n  if (!value) {\n    return [50, 50];\n  }\n\n  const result: IVarXYValue = [0, 0];\n\n  for (let i = 0; i < value.length; i++) {\n    result[i] = ((value[i] - min[i]) / (max[i] - min[i])) * 100;\n  }\n\n  return result;\n}\n\n/**\n * XY offset picker. Accepts and provides an array in form of [x, y].\n */\nexport const VarXY: FC<IVarXYProps> = ({\n  label,\n  path,\n  value,\n  onChange,\n  disabled,\n  className,\n  defaultValue = [0, 0],\n  min = [-1.0, -1.0],\n  max = [1.0, 1.0],\n  step = [0.01, 0.01]\n}) => {\n  const sliderRef = useRef<HTMLDivElement>(null);\n  const [currentValue, setCurrentValue] = useVarUIValue(path, value, onChange);\n  const rounded = useMemo(() => roundValue(currentValue, min, max, step), [\n    currentValue,\n    min,\n    max,\n    step\n  ]);\n  const percent = useMemo(() => percentValue(rounded, min, max), [\n    rounded,\n    min,\n    max\n  ]);\n\n  const updatePosition = useCallback(\n    (x: number, y: number) => {\n      if (!sliderRef.current) {\n        return;\n      }\n\n      const div = sliderRef.current;\n      const rect = div.getBoundingClientRect();\n\n      const percentX = (x - rect.left) / rect.width;\n      const percentY = (y - rect.top) / rect.height;\n\n      const value = roundValue(\n        [\n          min[0] + (max[0] - min[0]) * percentX,\n          min[1] + (max[1] - min[1]) * percentY\n        ],\n        min,\n        max,\n        step\n      );\n      setCurrentValue(value);\n    },\n    [setCurrentValue, min, max, step]\n  );\n\n  const { events } = usePointerDragSimple(updatePosition);\n\n  const reset = useCallback(() => {\n    if (typeof defaultValue !== 'undefined') {\n      setCurrentValue(defaultValue);\n    }\n  }, [defaultValue, setCurrentValue]);\n\n  return (\n    <VarBase label={label} disabled={disabled} className={className}>\n      <span className=\"react-var-ui-xy-value\">\n        {rounded[0]}, {rounded[1]}\n      </span>\n      <div className=\"react-var-ui-xy\">\n        <div\n          className=\"react-var-ui-xy-space\"\n          ref={sliderRef}\n          onClick={e => updatePosition(e.clientX, e.clientY)}\n          onDoubleClick={reset}\n          {...events}\n        >\n          <div\n            className=\"react-var-ui-xy-control\"\n            style={{ top: percent[1] + '%', left: percent[0] + '%' }}\n          ></div>\n        </div>\n      </div>\n    </VarBase>\n  );\n};\n","import React, { FC } from 'react';\n\nexport const IconImageSelect: FC = () => {\n  return (\n    <svg\n      width=\"34\"\n      height=\"36\"\n      viewBox=\"0 0 34 36\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <rect x=\"0.5\" y=\"2.5\" width=\"33\" height=\"33\" rx=\"5.5\" stroke=\"#515151\" />\n      <path\n        d=\"M16.456 13.736V18.968H11.2V20.6H16.456V25.856H18.088V20.6H23.32V18.968H18.088V13.736H16.456Z\"\n        fill=\"#515151\"\n      />\n    </svg>\n  );\n};\n","import React, { FC, useCallback } from 'react';\nimport { IconImageSelect } from './icons/IconImageSelect';\n\nimport { useVarUIValue } from './common/VarUIContext';\nimport { IVarBaseInputProps, VarBase } from './VarBase';\n\nexport interface IVarImageProps\n  extends IVarBaseInputProps<HTMLImageElement | string | null> {\n  path?: string;\n  value?: HTMLImageElement | string | null;\n}\n\n/**\n * A simple component that displays a string or a numeric value.\n */\nexport const VarImage: FC<IVarImageProps> = ({\n  label,\n  disabled,\n  path,\n  value,\n  onChange,\n  className,\n}) => {\n  const [currentValue, setCurrentValue] = useVarUIValue(path, value, onChange);\n\n  const deleteAction = useCallback(\n    () => setCurrentValue(null),\n    [setCurrentValue]\n  );\n\n  const onFileChange = useCallback(\n    event => {\n      const files = (event?.target as HTMLInputElement).files;\n      if (!files || !files.length) return;\n      const file = files[0];\n      const url = URL.createObjectURL(file);\n      setCurrentValue(url);\n    },\n    [setCurrentValue]\n  );\n\n  return (\n    <VarBase label={label} disabled={disabled} className={className}>\n      <div className=\"react-var-ui-image\">\n        <div className=\"react-var-ui-image-wrapper\">\n          {currentValue == null ? (\n            <IconImageSelect></IconImageSelect>\n          ) : (\n            <img\n              className=\"react-var-ui-image-wrapper-preview\"\n              src={\n                currentValue instanceof HTMLImageElement\n                  ? currentValue.src\n                  : currentValue\n              }\n              alt=\"preview\"\n            />\n          )}\n          <input type=\"file\" onChange={onFileChange}/>\n        </div>\n        {currentValue != null ? (\n          <span className=\"react-var-ui-image-delete\" onClick={deleteAction}>\n            删除\n          </span>\n        ) : null}\n      </div>\n    </VarBase>\n  );\n};\n","import React, { FC, ReactNode } from 'react';\n\nexport interface IVarCategoryProps {\n  /**\n   * Category label.\n   */\n  label: ReactNode;\n\n  /**\n   * Additional class names on the wrapping div element.\n   */\n  className?: string;\n}\n\n/**\n * Category component for grouping inputs.\n */\nexport const VarCategory: FC<IVarCategoryProps> = ({\n  label,\n  className,\n  children\n}) => {\n  return (\n    <div className={'react-var-ui-category ' + (className ? className : '')}>\n      <div className=\"react-var-ui-category-title\">{label}</div>\n      {!!children && <div>{children}</div>}\n    </div>\n  );\n};\n"],"names":["VarUIContext","createContext","undefined","useVarUIValue","path","fallbackValue","onChange","context","useContext","value","useMemo","getValue","setValue","useCallback","VarUI","values","updateValues","className","children","result","set","cloneDeep","contextValue","React","Provider","VarBase","label","disabled","PI2","Math","PI","wrap","angle","VarAngle","defaultValue","controlRef","useRef","currentValue","setCurrentValue","degrees","round","updatePosition","x","y","current","div","rect","getBoundingClientRect","centerX","left","width","centerY","top","height","atan2","usePointerDragSimple","events","useEffect","addEventListener","e","preventDefault","ref","style","transform","onDoubleClick","onWheel","deltaY","title","VarButton","onClick","buttonLabel","VarColor","alpha","useState","show","setShow","toggle","close","background","SketchPicker","color","alphaValue","rgb","a","toString","length","hex","disableAlpha","VarDisplay","roundValue","min","max","step","integer","isFinite","decimalPlaces","split","parseFloat","toFixed","IconDown","xmlns","fill","viewBox","fillRule","d","IconUp","VarNumber","showButtons","rounded","increaseValue","decreaseValue","type","target","VarSelect","options","serializedCurrentValue","JSON","stringify","parse","map","option","serializedValue","key","VarSlider","showInput","sliderRef","percent","clientX","VarString","maxLength","multiline","autoexpand","autoexpandOnInput","event","textarea","currentTarget","scrollHeight","textareaStyle","overflow","resize","onInput","VarToggle","checked","Array","isArray","i","percentValue","VarXY","percentX","percentY","reset","clientY","IconImageSelect","rx","stroke","VarImage","deleteAction","onFileChange","files","file","url","URL","createObjectURL","src","HTMLImageElement","alt","VarCategory"],"mappings":";;;;;;;;;;;;;;AAUO,IAAMA,YAAY,gBAAGC,mBAAa,CAA4BC,SAA5B,CAAlC;AAEP;;;;;;;;SAOgBC,cACdC,MACAC,eACAC;AAEA,MAAMC,OAAO,GAAGC,gBAAU,CAACR,YAAD,CAA1B;AACA,MAAMS,KAAK,GAAGC,aAAO,CAAC;AAAA;;AAAA,gCAAMH,OAAN,oBAAMA,OAAO,CAAEI,QAAT,CAAkBP,IAAlB,CAAN,gCAAiCC,aAAjC;AAAA,GAAD,EAAiD,CACpEE,OADoE,EAEpEH,IAFoE,EAGpEC,aAHoE,CAAjD,CAArB;AAKA,MAAMO,QAAQ,GAAGC,iBAAW,CAC1B,UAACJ,KAAD;AACE,QAAIL,IAAI,IAAIG,OAAZ,EAAqB;AACnBA,MAAAA,OAAO,CAACK,QAAR,CAAiBR,IAAjB,EAAuBK,KAAvB;AACD;;AAEDH,IAAAA,QAAQ,QAAR,YAAAA,QAAQ,CAAGG,KAAH,CAAR;AACD,GAPyB,EAQ1B,CAACL,IAAD,EAAOG,OAAP,EAAgBD,QAAhB,CAR0B,CAA5B;AAWA,SAAO,CAACG,KAAD,EAAQG,QAAR,CAAP;AACD;;ACbD;;;;;;AAKA,IAAaE,KAAK,GAAoB,SAAzBA,KAAyB;MACpCC,cAAAA;MACAC,oBAAAA;MACAC,iBAAAA;MACAC,gBAAAA;AAEA,MAAMP,QAAQ,GAAGE,iBAAW,CAC1B,UAACT,IAAD;AAAA,WAAoBA,IAAI,GAAGe,MAAM,CAACJ,MAAD,EAASX,IAAT,CAAT,GAA0BF,SAAlD;AAAA,GAD0B,EAE1B,CAACa,MAAD,CAF0B,CAA5B;AAKA,MAAMH,QAAQ,GAAGC,iBAAW,CAC1B,UAACT,IAAD,EAAeK,KAAf;AACEO,IAAAA,YAAY,CAACI,GAAG,CAACC,SAAS,CAACN,MAAD,CAAV,EAAoBX,IAApB,EAA0BK,KAA1B,CAAJ,CAAZ;AACD,GAHyB,EAI1B,CAACM,MAAD,EAASC,YAAT,CAJ0B,CAA5B;AAOA,MAAMM,YAAY,GAAGZ,aAAO,CAAC;AAAA,WAAO;AAAEK,MAAAA,MAAM,EAANA,MAAF;AAAUJ,MAAAA,QAAQ,EAARA,QAAV;AAAoBC,MAAAA,QAAQ,EAARA;AAApB,KAAP;AAAA,GAAD,EAAyC,CACnEG,MADmE,EAEnEJ,QAFmE,EAGnEC,QAHmE,CAAzC,CAA5B;AAMA,SACEW,4BAAA,CAACvB,YAAY,CAACwB,QAAd;AAAuBf,IAAAA,KAAK,EAAEa;GAA9B,EACEC,4BAAA,MAAA;AAAKN,IAAAA,SAAS,EAAE,mBAAmBA,SAAS,GAAGA,SAAH,GAAe,EAA3C;GAAhB,EACGC,QADH,CADF,CADF;AAOD,CA/BM;;ACcP;;;;;AAIA,IAAaO,OAAO,GAAsB,SAA7BA,OAA6B;MACxCC,aAAAA;MACAR,gBAAAA;MACAD,iBAAAA;MACAU,gBAAAA;AAEA,SACEJ,4BAAA,MAAA;AACEN,IAAAA,SAAS,EACP,yBACCS,KAAK,GACF,+BADE,GAEF,8BAHJ,KAICC,QAAQ,GAAG,wBAAH,GAA8B,EAJvC,KAKCV,SAAS,GAAGA,SAAH,GAAe,EALzB;GAFJ,EAUG,CAAC,CAACS,KAAF,IAAWH,4BAAA,OAAA,MAAA,EAAOG,KAAP,CAVd,EAWGR,QAXH,CADF;AAeD,CArBM;;AC9CP,IAAMU,GAAG,GAAGC,IAAI,CAACC,EAAL,GAAU,CAAtB;;AAEA,SAASC,IAAT,CAAcC,KAAd;AACE,SAAO,CAACJ,GAAG,GAAII,KAAK,GAAGJ,GAAhB,IAAwBA,GAA/B;AACD;AAID;;;;;AAGA,IAAaK,QAAQ,GAAuB,SAA/BA,QAA+B;MAC1CP,aAAAA;MACAtB,YAAAA;MACAK,aAAAA;MACAH,gBAAAA;MACAqB,gBAAAA;+BACAO;MAAAA,8CAAe;MACfjB,iBAAAA;AAEA,MAAMkB,UAAU,GAAGC,YAAM,CAAiB,IAAjB,CAAzB;;AACA,uBAAwCjC,aAAa,CAACC,IAAD,EAAOK,KAAP,EAAcH,QAAd,CAArD;AAAA,MAAO+B,YAAP;AAAA,MAAqBC,eAArB;;AACA,MAAMC,OAAO,GAAG7B,aAAO,CACrB;AAAA,WAAMmB,IAAI,CAACW,KAAL,CAAWT,IAAI,CAACM,YAAD,CAAJ,IAAsB,MAAMR,IAAI,CAACC,EAAjC,CAAX,CAAN;AAAA,GADqB,EAErB,CAACO,YAAD,CAFqB,CAAvB;AAKA,MAAMI,cAAc,GAAG5B,iBAAW,CAChC,UAAC6B,CAAD,EAAYC,CAAZ;AACE,QAAI,CAACR,UAAU,CAACS,OAAhB,EAAyB;AACvB;AACD;;AAED,QAAMC,GAAG,GAAGV,UAAU,CAACS,OAAvB;AACA,QAAME,IAAI,GAAGD,GAAG,CAACE,qBAAJ,EAAb;AACA,QAAMC,OAAO,GAAGF,IAAI,CAACG,IAAL,GAAYH,IAAI,CAACI,KAAL,GAAa,CAAzC;AACA,QAAMC,OAAO,GAAGL,IAAI,CAACM,GAAL,GAAWN,IAAI,CAACO,MAAL,GAAc,CAAzC;AACAf,IAAAA,eAAe,CAACP,IAAI,CAACF,IAAI,CAACyB,KAAL,CAAWX,CAAC,GAAGQ,OAAf,EAAwBT,CAAC,GAAGM,OAA5B,IAAuCnB,IAAI,CAACC,EAAL,GAAU,CAAlD,CAAL,CAAf;AACD,GAX+B,EAYhC,CAACQ,eAAD,CAZgC,CAAlC;;AAeA,8BAAmBiB,wCAAoB,CAACd,cAAD,CAAvC;AAAA,MAAQe,MAAR,yBAAQA,MAAR;;AAEAC,EAAAA,eAAS,CAAC;;;AACR,2BAAAtB,UAAU,CAACS,OAAX,yCAAoBc,gBAApB,CAAqC,OAArC,EAA8C,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACC,cAAF,EAAJ;AAAA,KAA/C;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SACErC,4BAAA,CAACE,OAAD;AAASC,IAAAA,KAAK,EAAEA;AAAOC,IAAAA,QAAQ,EAAEA;AAAUV,IAAAA,SAAS,EAAEA;GAAtD,EACEM,4BAAA,OAAA;AAAMN,IAAAA,SAAS,EAAC;GAAhB,EAA4CsB,OAA5C,QAAA,CADF,EAEEhB,4BAAA,MAAA;AAAKN,IAAAA,SAAS,EAAC;GAAf,EACEM,4BAAA,MAAA;AACEN,IAAAA,SAAS,EAAC;AACV4C,IAAAA,GAAG,EAAE1B;AACL2B,IAAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,cAAYxB,OAAZ;AAAX;AACPyB,IAAAA,aAAa,EAAE;AAAA,aACb,OAAO9B,YAAP,KAAwB,WAAxB,IAAuCI,eAAe,CAACJ,YAAD,CADzC;AAAA;AAGf+B,IAAAA,OAAO,EAAE,iBAAAN,CAAC;AACRrB,MAAAA,eAAe,CAACP,IAAI,CAACM,YAAY,GAAG,OAAOsB,CAAC,CAACO,MAAF,GAAW,CAAX,GAAe,CAAC,CAAhB,GAAoB,CAA3B,CAAhB,CAAL,CAAf;AACD;AACDC,IAAAA,KAAK,EAAC;KACFX,OAXN,CADF,CAFF,CADF;AAoBD,CAzDM;;ACIP;;;;AAGA,IAAaY,SAAS,GAAwB,SAAjCA,SAAiC;MAC5C1C,aAAAA;MACA2C,gBAAAA;MACAC,mBAAAA;MACA3C,gBAAAA;MACAV,iBAAAA;AAEA,SACEM,4BAAA,CAACE,OAAD;AAASC,IAAAA,KAAK,EAAEA;AAAOC,IAAAA,QAAQ,EAAEA;AAAUV,IAAAA,SAAS,EAAEA;GAAtD,EACEM,4BAAA,OAAA;AAAMN,IAAAA,SAAS,EAAC;GAAhB,EACEM,4BAAA,SAAA;AAAQ8C,IAAAA,OAAO,EAAE;AAAA,aAAMA,QAAN,oBAAMA,QAAO,EAAb;AAAA;AAAmB1C,IAAAA,QAAQ,EAAEA;GAA9C,EACG2C,WADH,CADF,CADF,CADF;AASD,CAhBM;;ACVP;;;;AAGA,IAAaC,QAAQ,GAAuB,SAA/BA,QAA+B;MAC1C7C,aAAAA;MACAtB,YAAAA;MACAK,aAAAA;MACAH,gBAAAA;MACAkE,aAAAA;MACA7C,gBAAAA;MACAV,iBAAAA;;AAEA,uBAAwCd,aAAa,CAACC,IAAD,EAAOK,KAAP,EAAcH,QAAd,CAArD;AAAA,MAAO+B,YAAP;AAAA,MAAqBC,eAArB;;AAEA,kBAAwBmC,cAAQ,CAAC,KAAD,CAAhC;AAAA,MAAOC,IAAP;AAAA,MAAaC,OAAb;;AACA,MAAMC,MAAM,GAAG/D,iBAAW,CAAC;AAAA,WAAM8D,OAAO,CAAC,UAAAD,IAAI;AAAA,aAAI,CAACA,IAAL;AAAA,KAAL,CAAb;AAAA,GAAD,EAA+B,CAACC,OAAD,CAA/B,CAA1B;AACA,MAAME,KAAK,GAAGhE,iBAAW,CAAC;AAAA,WAAM8D,OAAO,CAAC,KAAD,CAAb;AAAA,GAAD,EAAuB,CAACA,OAAD,CAAvB,CAAzB;AAEA,SACEpD,4BAAA,CAACE,OAAD;AAASC,IAAAA,KAAK,EAAEA;AAAOC,IAAAA,QAAQ,EAAEA;AAAUV,IAAAA,SAAS,EAAEA;GAAtD,EACEM,4BAAA,OAAA,MAAA,EACEA,4BAAA,OAAA;AAAMN,IAAAA,SAAS,EAAC;GAAhB,EAA4CoB,YAA5C,CADF,EAEEd,4BAAA,MAAA;AAAKN,IAAAA,SAAS,EAAC;GAAf,EACEM,4BAAA,MAAA;AAAKN,IAAAA,SAAS,EAAC;AAA4BoD,IAAAA,OAAO,EAAEO;GAApD,EACErD,4BAAA,MAAA;AACEN,IAAAA,SAAS,EAAC;AACVkD,IAAAA,KAAK,EAAC;AACNL,IAAAA,KAAK,EAAE;AAAEgB,MAAAA,UAAU,EAAEzC;AAAd;GAHT,CADF,CADF,EAQGqC,IAAI,GACHnD,4BAAA,MAAA;AAAKN,IAAAA,SAAS,EAAC;GAAf,EACEM,4BAAA,MAAA;AAAKN,IAAAA,SAAS,EAAC;AAA2BoD,IAAAA,OAAO,EAAEQ;GAAnD,CADF,EAEEtD,4BAAA,CAACwD,uBAAD;AACEC,IAAAA,KAAK,EAAE3C;AACP/B,IAAAA,QAAQ,EAAE,kBAAAa,MAAM;AACd,UAAIqD,KAAJ,EAAW;AAAA;;AACT,YAAIS,UAAU,GAAGpD,IAAI,CAACW,KAAL,CACf,kBAACrB,MAAM,CAAC+D,GAAP,CAAWC,CAAZ,4BAAiB,GAAjB,IAAwB,GADT,EAEfC,QAFe,CAEN,EAFM,CAAjB;;AAGA,YAAIH,UAAU,CAACI,MAAX,KAAsB,CAA1B,EAA6B;AAC3BJ,UAAAA,UAAU,GAAG,MAAMA,UAAnB;AACD;;AACD3C,QAAAA,eAAe,CAACnB,MAAM,CAACmE,GAAP,GAAaL,UAAd,CAAf;AACD,OARD,MAQO;AACL3C,QAAAA,eAAe,CAACnB,MAAM,CAACmE,GAAR,CAAf;AACD;AACF;AACDC,IAAAA,YAAY,EAAE,CAACf;GAfjB,CAFF,CADG,GAqBD,IA7BN,CAFF,CADF,CADF;AAsCD,CArDM;;ACCP;;;;AAGA,IAAagB,UAAU,GAAyB,SAAnCA,UAAmC;MAC9C9D,aAAAA;MACAtB,YAAAA;MACAK,aAAAA;MACAkB,gBAAAA;MACAV,iBAAAA;;AAEA,uBAAuBd,aAAa,CAACC,IAAD,EAAOK,KAAP,CAApC;AAAA,MAAO4B,YAAP;;AAEA,SACEd,4BAAA,CAACE,OAAD;AAASC,IAAAA,KAAK,EAAEA;AAAOC,IAAAA,QAAQ,EAAEA;AAAUV,IAAAA,SAAS,EAAEA;GAAtD,EACEM,4BAAA,OAAA,MAAA,EAAOc,YAAP,CADF,CADF;AAKD,CAdM;;SCrBSoD,WACdhF,OACAiF,KACAC,KACAC,MACAC;AAEA,MAAI,CAACC,QAAQ,CAACrF,KAAD,CAAb,EAAsB;AACpBA,IAAAA,KAAK,GAAGiF,GAAH,WAAGA,GAAH,GAAU,CAAf;AACD;;AAED,MAAIK,aAAa,GAAG,CAApB;;AACA,MAAI,OAAOH,IAAP,KAAgB,QAApB,EAA8B;AAAA;;AAC5BG,IAAAA,aAAa,GAAG,0BAAAH,IAAI,CAACR,QAAL,GAAgBY,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,4CAA+BX,MAA/B,KAAyC,CAAzD;;AAEA,QAAIU,aAAa,GAAG,EAApB,EAAwB;AACtB;AACAA,MAAAA,aAAa,GAAG,EAAhB;AACD;;AAEDtF,IAAAA,KAAK,GAAGoB,IAAI,CAACW,KAAL,CAAW/B,KAAK,GAAGmF,IAAnB,IAA2BA,IAAnC;AACD;;AAED,MAAI,OAAOF,GAAP,KAAe,QAAnB,EAA6B;AAC3BjF,IAAAA,KAAK,GAAGoB,IAAI,CAAC8D,GAAL,CAASD,GAAT,EAAcjF,KAAd,CAAR;AACD;;AAED,MAAI,OAAOkF,GAAP,KAAe,QAAnB,EAA6B;AAC3BlF,IAAAA,KAAK,GAAGoB,IAAI,CAAC6D,GAAL,CAASC,GAAT,EAAclF,KAAd,CAAR;AACD;;AAED,SAAOoF,OAAO,GAAGhE,IAAI,CAACW,KAAL,CAAW/B,KAAX,CAAH,GAAuBwF,UAAU,CAACxF,KAAK,CAACyF,OAAN,CAAcH,aAAd,CAAD,CAA/C;AACD;;AC9BM,IAAMI,QAAQ,GAAO,SAAfA,QAAe;AAC1B,SACE5E,4BAAA,MAAA;AACE6E,IAAAA,KAAK,EAAC;AACNlD,IAAAA,KAAK,EAAC;AACNG,IAAAA,MAAM,EAAC;AACPgD,IAAAA,IAAI,EAAC;AACLC,IAAAA,OAAO,EAAC;GALV,EAOE/E,4BAAA,OAAA;AACEgF,IAAAA,QAAQ,EAAC;AACTC,IAAAA,CAAC,EAAC;GAFJ,CAPF,CADF;AAcD,CAfM;;ACAA,IAAMC,MAAM,GAAO,SAAbA,MAAa;AACxB,SACElF,4BAAA,MAAA;AACE6E,IAAAA,KAAK,EAAC;AACNlD,IAAAA,KAAK,EAAC;AACNG,IAAAA,MAAM,EAAC;AACPgD,IAAAA,IAAI,EAAC;AACLC,IAAAA,OAAO,EAAC;GALV,EAOE/E,4BAAA,OAAA;AACEgF,IAAAA,QAAQ,EAAC;AACTC,IAAAA,CAAC,EAAC;GAFJ,CAPF,CADF;AAcD,CAfM;;ACkCP;;;;AAGA,IAAaE,SAAS,GAAwB,SAAjCA,SAAiC;MAC5ChF,aAAAA;MACAtB,YAAAA;MACAK,aAAAA;MACAH,gBAAAA;MACAoF,WAAAA;MACAC,WAAAA;uBACAC;MAAAA,8BAAO;MACPC,eAAAA;MACAc,mBAAAA;MACAhF,gBAAAA;MACAV,iBAAAA;;AAEA,uBAAwCd,aAAa,CAACC,IAAD,EAAOK,KAAP,EAAcH,QAAd,CAArD;AAAA,MAAO+B,YAAP;AAAA,MAAqBC,eAArB;;AACA,MAAMsE,OAAO,GAAGlG,aAAO,CACrB;AAAA,WAAM+E,UAAU,CAACpD,YAAD,EAAeqD,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+B,CAAC,CAACC,OAAjC,CAAhB;AAAA,GADqB,EAErB,CAACxD,YAAD,EAAeqD,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+BC,OAA/B,CAFqB,CAAvB;AAKA,MAAMgB,aAAa,GAAGhG,iBAAW,CAC/B;AAAA,WACEyB,eAAe,CACbmD,UAAU,CAACpD,YAAY,IAAIuD,IAAJ,WAAIA,IAAJ,GAAY,CAAZ,CAAb,EAA6BF,GAA7B,EAAkCC,GAAlC,EAAuCC,IAAvC,EAA6C,CAAC,CAACC,OAA/C,CADG,CADjB;AAAA,GAD+B,EAK/B,CAACxD,YAAD,EAAeC,eAAf,EAAgCuD,OAAhC,EAAyCH,GAAzC,EAA8CC,GAA9C,EAAmDC,IAAnD,CAL+B,CAAjC;AAQA,MAAMkB,aAAa,GAAGjG,iBAAW,CAC/B;AAAA,WACEyB,eAAe,CACbmD,UAAU,CAACpD,YAAY,IAAIuD,IAAJ,WAAIA,IAAJ,GAAY,CAAZ,CAAb,EAA6BF,GAA7B,EAAkCC,GAAlC,EAAuCC,IAAvC,EAA6C,CAAC,CAACC,OAA/C,CADG,CADjB;AAAA,GAD+B,EAK/B,CAACxD,YAAD,EAAeC,eAAf,EAAgCuD,OAAhC,EAAyCH,GAAzC,EAA8CC,GAA9C,EAAmDC,IAAnD,CAL+B,CAAjC;AAQA,SACErE,4BAAA,CAACE,OAAD;AAASC,IAAAA,KAAK,EAAEA;AAAOC,IAAAA,QAAQ,EAAEA;AAAUV,IAAAA,SAAS,EAAEA;GAAtD,EACEM,4BAAA,MAAA;AAAKN,IAAAA,SAAS,EAAC;GAAf,EACEM,4BAAA,QAAA;AACEN,IAAAA,SAAS,EAAC;AACV8F,IAAAA,IAAI,EAAC;AACLrB,IAAAA,GAAG,EAAEA;AACLC,IAAAA,GAAG,EAAEA;AACLC,IAAAA,IAAI,EAAEA;AACNnF,IAAAA,KAAK,EAAEmG,OAAO,CAACxB,QAAR;AACP9E,IAAAA,QAAQ,EAAE,kBAAAqD,CAAC;AAAA,aACTrB,eAAe,CACbmD,UAAU,CAACQ,UAAU,CAACtC,CAAC,CAACqD,MAAF,CAASvG,KAAV,CAAX,EAA6BiF,GAA7B,EAAkCC,GAAlC,EAAuCC,IAAvC,EAA6C,CAAC,CAACC,OAA/C,CADG,CADN;AAAA;GAPb,CADF,EAcGc,WAAW,IACVpF,4BAAA,wBAAA,MAAA,EACEA,4BAAA,SAAA;AAAQ4C,IAAAA,KAAK,EAAC;AAAWE,IAAAA,OAAO,EAAEwC;GAAlC,EACEtF,4BAAA,CAACkF,MAAD,MAAA,CADF,CADF,EAIElF,4BAAA,SAAA;AAAQ4C,IAAAA,KAAK,EAAC;AAAWE,IAAAA,OAAO,EAAEyC;GAAlC,EACEvF,4BAAA,CAAC4E,QAAD,MAAA,CADF,CAJF,CAfJ,CADF,CADF;AA6BD,CAhEM;;ACTP;;;;AAGA,IAAac,SAAS,GAAwB,SAAjCA,SAAiC;MAC5CvF,aAAAA;MACAtB,YAAAA;MACAK,aAAAA;MACAH,gBAAAA;MACA4G,eAAAA;MACAvF,gBAAAA;MACAV,iBAAAA;;AAEA,uBAAwCd,aAAa,CAACC,IAAD,EAAOK,KAAP,EAAcH,QAAd,CAArD;AAAA,MAAO+B,YAAP;AAAA,MAAqBC,eAArB;;AAEA,MAAM6E,sBAAsB,GAAGzG,aAAO,CAAC;AAAA,WAAM0G,IAAI,CAACC,SAAL,CAAehF,YAAf,CAAN;AAAA,GAAD,EAAqC,CACzEA,YADyE,CAArC,CAAtC;AAIA,SACEd,4BAAA,CAACE,OAAD;AAASC,IAAAA,KAAK,EAAEA;AAAOC,IAAAA,QAAQ,EAAEA;AAAUV,IAAAA,SAAS,EAAEA;GAAtD,EACEM,4BAAA,MAAA;AAAKN,IAAAA,SAAS,EAAC;GAAf,EACEM,4BAAA,SAAA;AACEjB,IAAAA,QAAQ,EAAE,kBAAAqD,CAAC;AAAA,aAAIrB,eAAe,CAAC8E,IAAI,CAACE,KAAL,CAAW3D,CAAC,CAACqD,MAAF,CAASvG,KAApB,CAAD,CAAnB;AAAA;AACXA,IAAAA,KAAK,EAAE0G;AACPhD,IAAAA,KAAK,EAAC;GAHR,EAKG+C,OAAO,CAACK,GAAR,CAAY,UAAAC,MAAM;;;AACjB,QAAMC,eAAe,GAAGL,IAAI,CAACC,SAAL,kBAAeG,MAAM,CAAC/G,KAAtB,4BAA+B+G,MAAM,CAACE,GAAtC,CAAxB;AAEA,WACEnG,4BAAA,SAAA;AAAQmG,MAAAA,GAAG,EAAEF,MAAM,CAACE;AAAKjH,MAAAA,KAAK,EAAEgH;KAAhC,EACGD,MAAM,CAAC9F,KADV,CADF;AAKD,GARA,CALH,CADF,CADF,CADF;AAqBD,CApCM;;ACQP;;;;AAGA,IAAaiG,SAAS,GAAwB,SAAjCA,SAAiC;MAC5CjG,aAAAA;MACAtB,YAAAA;MACAK,aAAAA;MACAH,gBAAAA;MACAoF,WAAAA;MACAC,WAAAA;MACAC,YAAAA;MACAC,eAAAA;MACA3D,oBAAAA;MACA0F,iBAAAA;MACAjB,mBAAAA;MACAhF,gBAAAA;MACAV,iBAAAA;AAEA,MAAM4G,SAAS,GAAGzF,YAAM,CAAiB,IAAjB,CAAxB;;AACA,uBAAwCjC,aAAa,CAACC,IAAD,EAAOK,KAAP,EAAcH,QAAd,CAArD;AAAA,MAAO+B,YAAP;AAAA,MAAqBC,eAArB;;AACA,MAAMsE,OAAO,GAAGlG,aAAO,CACrB;AAAA,WAAM+E,UAAU,CAACpD,YAAD,EAAeqD,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+B,CAAC,CAACC,OAAjC,CAAhB;AAAA,GADqB,EAErB,CAACxD,YAAD,EAAeqD,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+BC,OAA/B,CAFqB,CAAvB;AAIA,MAAMiC,OAAO,GAAGpH,aAAO,CAAC;AAAA,WAAO,CAACkG,OAAO,GAAGlB,GAAX,KAAmBC,GAAG,GAAGD,GAAzB,CAAD,GAAkC,GAAxC;AAAA,GAAD,EAA8C,CACnEkB,OADmE,EAEnElB,GAFmE,EAGnEC,GAHmE,CAA9C,CAAvB;AAMA,MAAMlD,cAAc,GAAG5B,iBAAW,CAChC,UAAC6B,CAAD;AACE,QAAI,CAACmF,SAAS,CAACjF,OAAf,EAAwB;AACtB;AACD;;AAED,QAAMC,GAAG,GAAGgF,SAAS,CAACjF,OAAtB;AACA,QAAME,IAAI,GAAGD,GAAG,CAACE,qBAAJ,EAAb;AACA,QAAM+E,OAAO,GAAG,CAACpF,CAAC,GAAGI,IAAI,CAACG,IAAV,IAAkBH,IAAI,CAACI,KAAvC;AACA,QAAMzC,KAAK,GAAGgF,UAAU,CACtBC,GAAG,GAAG,CAACC,GAAG,GAAGD,GAAP,IAAcoC,OADE,EAEtBpC,GAFsB,EAGtBC,GAHsB,EAItBC,IAJsB,EAKtB,CAAC,CAACC,OALoB,CAAxB;AAOAvD,IAAAA,eAAe,CAAC7B,KAAD,CAAf;AACD,GAjB+B,EAkBhC,CAAC6B,eAAD,EAAkBuD,OAAlB,EAA2BH,GAA3B,EAAgCC,GAAhC,EAAqCC,IAArC,CAlBgC,CAAlC;AAqBA,MAAMiB,aAAa,GAAGhG,iBAAW,CAC/B;AAAA,WACEyB,eAAe,CACbmD,UAAU,CAACpD,YAAY,GAAGuD,IAAhB,EAAsBF,GAAtB,EAA2BC,GAA3B,EAAgCC,IAAhC,EAAsC,CAAC,CAACC,OAAxC,CADG,CADjB;AAAA,GAD+B,EAK/B,CAACxD,YAAD,EAAeC,eAAf,EAAgCuD,OAAhC,EAAyCH,GAAzC,EAA8CC,GAA9C,EAAmDC,IAAnD,CAL+B,CAAjC;AAQA,MAAMkB,aAAa,GAAGjG,iBAAW,CAC/B;AAAA,WACEyB,eAAe,CACbmD,UAAU,CAACpD,YAAY,GAAGuD,IAAhB,EAAsBF,GAAtB,EAA2BC,GAA3B,EAAgCC,IAAhC,EAAsC,CAAC,CAACC,OAAxC,CADG,CADjB;AAAA,GAD+B,EAK/B,CAACxD,YAAD,EAAeC,eAAf,EAAgCuD,OAAhC,EAAyCH,GAAzC,EAA8CC,GAA9C,EAAmDC,IAAnD,CAL+B,CAAjC;;AAQA,8BAAmBrC,wCAAoB,CAACd,cAAD,CAAvC;AAAA,MAAQe,MAAR,yBAAQA,MAAR;;AAEAC,EAAAA,eAAS,CAAC;;;AACR,0BAAAoE,SAAS,CAACjF,OAAV,wCAAmBc,gBAAnB,CAAoC,OAApC,EAA6C,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACC,cAAF,EAAJ;AAAA,KAA9C;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SACErC,4BAAA,CAACE,OAAD;AAASC,IAAAA,KAAK,EAAEA;AAAOC,IAAAA,QAAQ,EAAEA;AAAUV,IAAAA,SAAS,EAAEA;GAAtD,EACEM,4BAAA,MAAA;AAAKN,IAAAA,SAAS,EAAC;GAAf,EACEM,4BAAA,MAAA;AACEN,IAAAA,SAAS,EAAC;AACV4C,IAAAA,GAAG,EAAEgE;AACLxD,IAAAA,OAAO,EAAE,iBAAAV,CAAC;AAAA,aAAIlB,cAAc,CAACkB,CAAC,CAACoE,OAAH,CAAlB;AAAA;AACV/D,IAAAA,aAAa,EAAE;AAAA,aACb,OAAO9B,YAAP,KAAwB,WAAxB,IAAuCI,eAAe,CAACJ,YAAD,CADzC;AAAA;AAGf+B,IAAAA,OAAO,EAAE,iBAAAN,CAAC;AACRA,MAAAA,CAAC,CAACO,MAAF,GAAW,CAAX,GAAe2C,aAAa,EAA5B,GAAiCC,aAAa,EAA9C;AACD;AACD3C,IAAAA,KAAK,EAAC;KACFX,OAXN,EAaEjC,4BAAA,MAAA;AACEN,IAAAA,SAAS,EAAC;AACV6C,IAAAA,KAAK,EAAE;AAAEZ,MAAAA,KAAK,EAAE4E,OAAO,GAAG;AAAnB;GAFT,CAbF,CADF,EAmBGF,SAAS,GACRrG,4BAAA,QAAA;AACEN,IAAAA,SAAS,EAAC;AACV8F,IAAAA,IAAI,EAAC;AACLrB,IAAAA,GAAG,EAAEA;AACLC,IAAAA,GAAG,EAAEA;AACLC,IAAAA,IAAI,EAAEA;AACNnF,IAAAA,KAAK,EAAEmG;AACPtG,IAAAA,QAAQ,EAAE,kBAAAqD,CAAC;AAAA,aACTrB,eAAe,CACbmD,UAAU,CACRQ,UAAU,CAACtC,CAAC,CAACqD,MAAF,CAASvG,KAAV,CADF,EAERiF,GAFQ,EAGRC,GAHQ,EAIRC,IAJQ,EAKR,CAAC,CAACC,OALM,CADG,CADN;AAAA;GAPb,CADQ,GAqBRtE,4BAAA,OAAA,MAAA,EAAOqF,OAAO,CAACxB,QAAR,EAAP,CAxCJ,EA0CGuB,WAAW,IACVpF,4BAAA,wBAAA,MAAA,EACEA,4BAAA,SAAA;AAAQ4C,IAAAA,KAAK,EAAC;AAAWE,IAAAA,OAAO,EAAEwC;GAAlC,EACEtF,4BAAA,CAACkF,MAAD,MAAA,CADF,CADF,EAIElF,4BAAA,SAAA;AAAQ4C,IAAAA,KAAK,EAAC;AAAWE,IAAAA,OAAO,EAAEyC;GAAlC,EACEvF,4BAAA,CAAC4E,QAAD,MAAA,CADF,CAJF,CA3CJ,CADF,CADF;AAyDD,CA/HM;;ACrBP;;;;AAGA,IAAa6B,SAAS,GAAwB,SAAjCA,SAAiC;MAC5CtG,aAAAA;MACAtB,YAAAA;MACAK,aAAAA;MACAH,gBAAAA;MACA2H,iBAAAA;MACAC,iBAAAA;MACAC,kBAAAA;MACAxG,gBAAAA;MACAV,iBAAAA;;AAEA,uBAAwCd,aAAa,CAACC,IAAD,EAAOK,KAAP,EAAcH,QAAd,CAArD;AAAA,MAAO+B,YAAP;AAAA,MAAqBC,eAArB;;AAEA,MAAM8F,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD;AACxB,QAAMC,QAAQ,GAAGD,KAAK,CAACE,aAAvB;AACAD,IAAAA,QAAQ,CAACxE,KAAT,CAAeT,MAAf,GAAwB,GAAxB;AACAiF,IAAAA,QAAQ,CAACxE,KAAT,CAAeT,MAAf,GAA2BiF,QAAQ,CAACE,YAApC;AACD,GAJD;;AAMA,MAAMC,aAAa,GAA8B/H,aAAO,CACtD;AAAA,WAAOyH,UAAU,GAAG;AAAEO,MAAAA,QAAQ,EAAE,QAAZ;AAAsBC,MAAAA,MAAM,EAAE;AAA9B,KAAH,GAA4CzI,SAA7D;AAAA,GADsD,EAEtD,CAACiI,UAAD,CAFsD,CAAxD;AAKA,SACE5G,4BAAA,CAACE,OAAD;AAASC,IAAAA,KAAK,EAAEA;AAAOC,IAAAA,QAAQ,EAAEA;AAAUV,IAAAA,SAAS,EAAEA;GAAtD,EACGiH,SAAS,GACR3G,4BAAA,WAAA;AACEN,IAAAA,SAAS,EAAC;AACVR,IAAAA,KAAK,EAAE4B;AACP/B,IAAAA,QAAQ,EAAE,kBAAAqD,CAAC;AAAA,aAAIrB,eAAe,CAACqB,CAAC,CAACqD,MAAF,CAASvG,KAAV,CAAnB;AAAA;AACXmI,IAAAA,OAAO,EAAET,UAAU,GAAGC,iBAAH,GAAuBlI;AAC1C4D,IAAAA,KAAK,EAAE2E;GALT,CADQ,GASRlH,4BAAA,OAAA;AAAMN,IAAAA,SAAS,EAAC;GAAhB,EACEM,4BAAA,QAAA;AACEwF,IAAAA,IAAI,EAAC;AACLkB,IAAAA,SAAS,EAAEA;AACXxH,IAAAA,KAAK,EAAE4B;AACP/B,IAAAA,QAAQ,EAAE,kBAAAqD,CAAC;AAAA,aAAIrB,eAAe,CAACqB,CAAC,CAACqD,MAAF,CAASvG,KAAV,CAAnB;AAAA;GAJb,CADF,CAVJ,CADF;AAsBD,CA9CM;;ACnBP;;;;AAGA,IAAaoI,SAAS,GAAwB,SAAjCA,SAAiC;MAC5CnH,aAAAA;MACAtB,YAAAA;MACAK,aAAAA;MACAH,gBAAAA;MACAqB,gBAAAA;MACAV,iBAAAA;;AAEA,uBAAwCd,aAAa,CAACC,IAAD,EAAOK,KAAP,EAAcH,QAAd,CAArD;AAAA,MAAO+B,YAAP;AAAA,MAAqBC,eAArB;;AAEA,SACEf,4BAAA,CAACE,OAAD;AAASC,IAAAA,KAAK,EAAEA;AAAOC,IAAAA,QAAQ,EAAEA;AAAUV,IAAAA,SAAS,EAAEA;GAAtD,EACEM,4BAAA,OAAA,MAAA,EACEA,4BAAA,QAAA;AAAON,IAAAA,SAAS,EAAC;AAAsBkD,IAAAA,KAAK,EAAC;GAA7C,EACE5C,4BAAA,QAAA;AACEwF,IAAAA,IAAI,EAAC;AACL+B,IAAAA,OAAO,EAAEzG;AACT/B,IAAAA,QAAQ,EAAE,kBAAAqD,CAAC;AAAA,aAAIrB,eAAe,CAACqB,CAAC,CAACqD,MAAF,CAAS8B,OAAV,CAAnB;AAAA;GAHb,CADF,EAMEvH,4BAAA,OAAA;AAAMN,IAAAA,SAAS,EAAC;GAAhB,CANF,CADF,CADF,CADF;AAcD,CAxBM;;ACeP,SAASwE,YAAT,CACEhF,KADF,EAEEiF,GAFF,EAGEC,GAHF,EAIEC,IAJF;AAME,MAAMzE,MAAM,GAAgB,CAAC,CAAD,EAAI,CAAJ,CAA5B;;AAEA,MAAI,CAACV,KAAD,IAAU,CAACsI,KAAK,CAACC,OAAN,CAAcvI,KAAd,CAAX,IAAmCA,KAAK,CAAC4E,MAAN,GAAe,CAAtD,EAAyD;AACvD,WAAOlE,MAAP;AACD;;AAED,OAAK,IAAI8H,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGrD,IAAI,CAACP,MAAzB,EAAiC4D,CAAC,EAAlC,EAAsC;AAAA;;AACpC,QAAMlD,aAAa,GAAG,0BAAAH,IAAI,CAACqD,CAAD,CAAJ,CAAQ7D,QAAR,GAAmBY,KAAnB,CAAyB,GAAzB,EAA8B,CAA9B,4CAAkCX,MAAlC,KAA4C,CAAlE;AACAlE,IAAAA,MAAM,CAAC8H,CAAD,CAAN,GAAYpH,IAAI,CAACW,KAAL,CAAW/B,KAAK,CAACwI,CAAD,CAAL,GAAWrD,IAAI,CAACqD,CAAD,CAA1B,IAAiCrD,IAAI,CAACqD,CAAD,CAAjD;AACA9H,IAAAA,MAAM,CAAC8H,CAAD,CAAN,GAAYpH,IAAI,CAAC8D,GAAL,CAASD,GAAG,CAACuD,CAAD,CAAZ,EAAiB9H,MAAM,CAAC8H,CAAD,CAAvB,CAAZ;AACA9H,IAAAA,MAAM,CAAC8H,CAAD,CAAN,GAAYpH,IAAI,CAAC6D,GAAL,CAASC,GAAG,CAACsD,CAAD,CAAZ,EAAiB9H,MAAM,CAAC8H,CAAD,CAAvB,CAAZ;AAEA9H,IAAAA,MAAM,CAAC8H,CAAD,CAAN,GAAYhD,UAAU,CAAC9E,MAAM,CAAC8H,CAAD,CAAN,CAAU/C,OAAV,CAAkBH,aAAlB,CAAD,CAAtB;AACD;;AAED,SAAO5E,MAAP;AACD;;AAED,SAAS+H,YAAT,CACEzI,KADF,EAEEiF,GAFF,EAGEC,GAHF;AAKE,MAAI,CAAClF,KAAL,EAAY;AACV,WAAO,CAAC,EAAD,EAAK,EAAL,CAAP;AACD;;AAED,MAAMU,MAAM,GAAgB,CAAC,CAAD,EAAI,CAAJ,CAA5B;;AAEA,OAAK,IAAI8H,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGxI,KAAK,CAAC4E,MAA1B,EAAkC4D,CAAC,EAAnC,EAAuC;AACrC9H,IAAAA,MAAM,CAAC8H,CAAD,CAAN,GAAa,CAACxI,KAAK,CAACwI,CAAD,CAAL,GAAWvD,GAAG,CAACuD,CAAD,CAAf,KAAuBtD,GAAG,CAACsD,CAAD,CAAH,GAASvD,GAAG,CAACuD,CAAD,CAAnC,CAAD,GAA4C,GAAxD;AACD;;AAED,SAAO9H,MAAP;AACD;AAED;;;;;AAGA,IAAagI,KAAK,GAAoB,SAAzBA,KAAyB;MACpCzH,aAAAA;MACAtB,YAAAA;MACAK,aAAAA;MACAH,gBAAAA;MACAqB,gBAAAA;MACAV,iBAAAA;+BACAiB;MAAAA,8CAAe,CAAC,CAAD,EAAI,CAAJ;sBACfwD;MAAAA,4BAAM,CAAC,CAAC,GAAF,EAAO,CAAC,GAAR;sBACNC;MAAAA,4BAAM,CAAC,GAAD,EAAM,GAAN;uBACNC;MAAAA,8BAAO,CAAC,IAAD,EAAO,IAAP;AAEP,MAAMiC,SAAS,GAAGzF,YAAM,CAAiB,IAAjB,CAAxB;;AACA,uBAAwCjC,aAAa,CAACC,IAAD,EAAOK,KAAP,EAAcH,QAAd,CAArD;AAAA,MAAO+B,YAAP;AAAA,MAAqBC,eAArB;;AACA,MAAMsE,OAAO,GAAGlG,aAAO,CAAC;AAAA,WAAM+E,YAAU,CAACpD,YAAD,EAAeqD,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB,CAAhB;AAAA,GAAD,EAAiD,CACtEvD,YADsE,EAEtEqD,GAFsE,EAGtEC,GAHsE,EAItEC,IAJsE,CAAjD,CAAvB;AAMA,MAAMkC,OAAO,GAAGpH,aAAO,CAAC;AAAA,WAAMwI,YAAY,CAACtC,OAAD,EAAUlB,GAAV,EAAeC,GAAf,CAAlB;AAAA,GAAD,EAAwC,CAC7DiB,OAD6D,EAE7DlB,GAF6D,EAG7DC,GAH6D,CAAxC,CAAvB;AAMA,MAAMlD,cAAc,GAAG5B,iBAAW,CAChC,UAAC6B,CAAD,EAAYC,CAAZ;AACE,QAAI,CAACkF,SAAS,CAACjF,OAAf,EAAwB;AACtB;AACD;;AAED,QAAMC,GAAG,GAAGgF,SAAS,CAACjF,OAAtB;AACA,QAAME,IAAI,GAAGD,GAAG,CAACE,qBAAJ,EAAb;AAEA,QAAMqG,QAAQ,GAAG,CAAC1G,CAAC,GAAGI,IAAI,CAACG,IAAV,IAAkBH,IAAI,CAACI,KAAxC;AACA,QAAMmG,QAAQ,GAAG,CAAC1G,CAAC,GAAGG,IAAI,CAACM,GAAV,IAAiBN,IAAI,CAACO,MAAvC;AAEA,QAAM5C,KAAK,GAAGgF,YAAU,CACtB,CACEC,GAAG,CAAC,CAAD,CAAH,GAAS,CAACC,GAAG,CAAC,CAAD,CAAH,GAASD,GAAG,CAAC,CAAD,CAAb,IAAoB0D,QAD/B,EAEE1D,GAAG,CAAC,CAAD,CAAH,GAAS,CAACC,GAAG,CAAC,CAAD,CAAH,GAASD,GAAG,CAAC,CAAD,CAAb,IAAoB2D,QAF/B,CADsB,EAKtB3D,GALsB,EAMtBC,GANsB,EAOtBC,IAPsB,CAAxB;AASAtD,IAAAA,eAAe,CAAC7B,KAAD,CAAf;AACD,GAtB+B,EAuBhC,CAAC6B,eAAD,EAAkBoD,GAAlB,EAAuBC,GAAvB,EAA4BC,IAA5B,CAvBgC,CAAlC;;AA0BA,8BAAmBrC,wCAAoB,CAACd,cAAD,CAAvC;AAAA,MAAQe,MAAR,yBAAQA,MAAR;;AAEA,MAAM8F,KAAK,GAAGzI,iBAAW,CAAC;AACxB,QAAI,OAAOqB,YAAP,KAAwB,WAA5B,EAAyC;AACvCI,MAAAA,eAAe,CAACJ,YAAD,CAAf;AACD;AACF,GAJwB,EAItB,CAACA,YAAD,EAAeI,eAAf,CAJsB,CAAzB;AAMA,SACEf,4BAAA,CAACE,OAAD;AAASC,IAAAA,KAAK,EAAEA;AAAOC,IAAAA,QAAQ,EAAEA;AAAUV,IAAAA,SAAS,EAAEA;GAAtD,EACEM,4BAAA,OAAA;AAAMN,IAAAA,SAAS,EAAC;GAAhB,EACG2F,OAAO,CAAC,CAAD,CADV,MAAA,EACiBA,OAAO,CAAC,CAAD,CADxB,CADF,EAIErF,4BAAA,MAAA;AAAKN,IAAAA,SAAS,EAAC;GAAf,EACEM,4BAAA,MAAA;AACEN,IAAAA,SAAS,EAAC;AACV4C,IAAAA,GAAG,EAAEgE;AACLxD,IAAAA,OAAO,EAAE,iBAAAV,CAAC;AAAA,aAAIlB,cAAc,CAACkB,CAAC,CAACoE,OAAH,EAAYpE,CAAC,CAAC4F,OAAd,CAAlB;AAAA;AACVvF,IAAAA,aAAa,EAAEsF;KACX9F,OALN,EAOEjC,4BAAA,MAAA;AACEN,IAAAA,SAAS,EAAC;AACV6C,IAAAA,KAAK,EAAE;AAAEV,MAAAA,GAAG,EAAE0E,OAAO,CAAC,CAAD,CAAP,GAAa,GAApB;AAAyB7E,MAAAA,IAAI,EAAE6E,OAAO,CAAC,CAAD,CAAP,GAAa;AAA5C;GAFT,CAPF,CADF,CAJF,CADF;AAqBD,CAjFM;;ACpEA,IAAM0B,eAAe,GAAO,SAAtBA,eAAsB;AACjC,SACEjI,4BAAA,MAAA;AACE2B,IAAAA,KAAK,EAAC;AACNG,IAAAA,MAAM,EAAC;AACPiD,IAAAA,OAAO,EAAC;AACRD,IAAAA,IAAI,EAAC;AACLD,IAAAA,KAAK,EAAC;GALR,EAOE7E,4BAAA,OAAA;AAAMmB,IAAAA,CAAC,EAAC;AAAMC,IAAAA,CAAC,EAAC;AAAMO,IAAAA,KAAK,EAAC;AAAKG,IAAAA,MAAM,EAAC;AAAKoG,IAAAA,EAAE,EAAC;AAAMC,IAAAA,MAAM,EAAC;GAA7D,CAPF,EAQEnI,4BAAA,OAAA;AACEiF,IAAAA,CAAC,EAAC;AACFH,IAAAA,IAAI,EAAC;GAFP,CARF,CADF;AAeD,CAhBM;;ACUP;;;;AAGA,IAAasD,QAAQ,GAAuB,SAA/BA,QAA+B;MAC1CjI,aAAAA;MACAC,gBAAAA;MACAvB,YAAAA;MACAK,aAAAA;MACAH,gBAAAA;MACAW,iBAAAA;;AAEA,uBAAwCd,aAAa,CAACC,IAAD,EAAOK,KAAP,EAAcH,QAAd,CAArD;AAAA,MAAO+B,YAAP;AAAA,MAAqBC,eAArB;;AAEA,MAAMsH,YAAY,GAAG/I,iBAAW,CAC9B;AAAA,WAAMyB,eAAe,CAAC,IAAD,CAArB;AAAA,GAD8B,EAE9B,CAACA,eAAD,CAF8B,CAAhC;AAKA,MAAMuH,YAAY,GAAGhJ,iBAAW,CAC9B,UAAAwH,KAAK;AACH,QAAMyB,KAAK,GAAIzB,KAAJ,oBAAIA,KAAK,CAAErB,MAAP,CAAmC8C,KAAlD;AACA,QAAI,CAACA,KAAD,IAAU,CAACA,KAAK,CAACzE,MAArB,EAA6B;AAC7B,QAAM0E,IAAI,GAAGD,KAAK,CAAC,CAAD,CAAlB;AACA,QAAME,GAAG,GAAGC,GAAG,CAACC,eAAJ,CAAoBH,IAApB,CAAZ;AACAzH,IAAAA,eAAe,CAAC0H,GAAD,CAAf;AACD,GAP6B,EAQ9B,CAAC1H,eAAD,CAR8B,CAAhC;AAWA,SACEf,4BAAA,CAACE,OAAD;AAASC,IAAAA,KAAK,EAAEA;AAAOC,IAAAA,QAAQ,EAAEA;AAAUV,IAAAA,SAAS,EAAEA;GAAtD,EACEM,4BAAA,MAAA;AAAKN,IAAAA,SAAS,EAAC;GAAf,EACEM,4BAAA,MAAA;AAAKN,IAAAA,SAAS,EAAC;GAAf,EACGoB,YAAY,IAAI,IAAhB,GACCd,4BAAA,CAACiI,eAAD,MAAA,CADD,GAGCjI,4BAAA,MAAA;AACEN,IAAAA,SAAS,EAAC;AACVkJ,IAAAA,GAAG,EACD9H,YAAY,YAAY+H,gBAAxB,GACI/H,YAAY,CAAC8H,GADjB,GAEI9H;AAENgI,IAAAA,GAAG,EAAC;GAPN,CAJJ,EAcE9I,4BAAA,QAAA;AAAOwF,IAAAA,IAAI,EAAC;AAAOzG,IAAAA,QAAQ,EAAEuJ;GAA7B,CAdF,CADF,EAiBGxH,YAAY,IAAI,IAAhB,GACCd,4BAAA,OAAA;AAAMN,IAAAA,SAAS,EAAC;AAA4BoD,IAAAA,OAAO,EAAEuF;GAArD,gBAAA,CADD,GAIG,IArBN,CADF,CADF;AA2BD,CArDM;;ACDP;;;;AAGA,IAAaU,WAAW,GAA0B,SAArCA,WAAqC;MAChD5I,aAAAA;MACAT,iBAAAA;MACAC,gBAAAA;AAEA,SACEK,4BAAA,MAAA;AAAKN,IAAAA,SAAS,EAAE,4BAA4BA,SAAS,GAAGA,SAAH,GAAe,EAApD;GAAhB,EACEM,4BAAA,MAAA;AAAKN,IAAAA,SAAS,EAAC;GAAf,EAA8CS,KAA9C,CADF,EAEG,CAAC,CAACR,QAAF,IAAcK,4BAAA,MAAA,MAAA,EAAML,QAAN,CAFjB,CADF;AAMD,CAXM;;;;;;;;;;;;;;;;;;"}